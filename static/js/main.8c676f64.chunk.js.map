{"version":3,"sources":["lib/configs/index.ts","views/components/environments/Top/index.tsx","lib/utils/index.ts","lib/utils/openrec.ts","views/components/environments/Generator/index.tsx","routers/Router/index.tsx","views/Component.tsx","serviceWorker.ts","index.tsx"],"names":["baseUrl","process","defaultFormValues","channelId","chatInUserName","chatColorMode","chatSize","stampSize","chatSpeed","chatLengthMax","giftNoticeMode","giftNoticeFeederMode","giftSpeed","giftNoticeSound","demoMode","generateOutputUrl","values","preview","paramText","d","Date","Math","floor","getTime","replace","random","Component","useState","formValues","setFormValues","outputUrl","setOutputUrl","previewUrl","setPreviewUrl","isCopied","setIsCopied","useEffect","newOutputUrl","newPreviewUrl","setTimeout","handleChange","e","persist","id","String","target","state","value","handleChangeCheckBox","console","log","className","style","whiteSpace","href","type","placeholder","onChange","checked","onFocus","select","document","execCommand","readOnly","transition","opacity","title","src","frameBorder","width","height","WebSocketManager","commentObserverRef","uri","instance","handshakeLoop","this","WebSocket","onopen","onOpen","onclose","onClose","onmessage","onMessage","onerror","onError","close","error","Error","on","message","setInterval","handshake","clearInterval","rawText","json","data","slice","JSON","parse","CommentDeliver","push","disconnect","er","send","observer","info","svgUrlBase","user_type","user_name","is_premium","is_moderator","is_fresh","is_warned","CommentObserver","_readers","reader","splice","indexOf","getMovieId","a","fetch","res","resNormalCommentSample","movie_id","live_type","onair_status","user_id","openrec_user_id","user_key","user_identify_id","user_rank","chat_id","item","golds","cre_dt","message_dt","is_authenticated","has_banned_word","stamp","quality_type","user_icon","supporter_rank","is_creaters","is_premium_hidden","user_color","yell","yell_type","to_user","capture","item_data","display_dt","del_flg","badges","resStampSample","stamp_id","group_id","image_url","resCaptureSample","movie_start_point","capture_point","status","is_public","published_at","is_ban","is_hidden","start_time","end_time","total_views","created_at","chat_from_at","url","thumbnail_url","thumbnail_urls","capture_channel","recxuser_id","nickname","introduction","icon_image_url","l_icon_image_url","cover_image_url","l_cover_image_url","follows","followers","is_official","is_team","is_league_yell","is_live","live_views","last_updated_at","user_status","is_creator","premium_start_at","premium_charge_type","premium_payment_status","email","twitter_screen_name","resYellSample","yell_id","name","label","image_url_small","animation_url","points","yells","ticker_seconds","subscription","months","tier","Comments","props","comments","map","v","i","key","fontSize","textSize","comment","Comment","alt","captureSize","yellSize","location","queryParams","URLSearchParams","search","get","Number","autoScrollStartMargin","autoScrollInterval","wsManager","setWsManager","commentObserver","onairInfo","setOnairInfo","setComments","onairObserverTimerRef","useRef","commentObserverTimerRef","autoScrollTimerRef","scrollTargetRef","prevState","onairObserver","current","readers","stringify","connect","nowBottom","window","innerHeight","scrollY","contentBottom","scrollHeight","scrollIntoView","behavior","block","inline","then","nowOnair","find","val","channel","catch","err","ref","FComponent","exact","path","render","to","App","Router","Boolean","hostname","match","ReactDOM","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.8c676f64.chunk.js","sourcesContent":["export const currentVer = \"v1.0.7\"\n\n// チャット生成先URL\nexport const baseUrl = process.env.REACT_APP_BASE_URL\n","import React, { FC, Props, useState, useEffect } from \"react\"\n\nimport { baseUrl, currentVer } from \"../../../../lib/configs\"\nimport \"./index.css\"\n\ntype FormValues = {\n  channelId: string\n  chatInUserName: boolean\n  chatColorMode: boolean\n  chatSize: string\n  stampSize: string\n  chatSpeed: string\n  chatLengthMax: string\n  giftNoticeMode: boolean\n  giftNoticeFeederMode: boolean\n  giftSpeed: string\n  giftNoticeSound: boolean\n  demoMode: boolean\n}\n\nconst defaultFormValues: FormValues = {\n  channelId: \"\",\n  chatInUserName: false,\n  chatColorMode: false,\n  chatSize: \"60\",\n  stampSize: \"128\",\n  chatSpeed: \"7000\",\n  chatLengthMax: \"30\",\n  giftNoticeMode: true,\n  giftNoticeFeederMode: true,\n  giftSpeed: \"5000\",\n  giftNoticeSound: false,\n  demoMode: false,\n}\n\nconst generateOutputUrl = (values: FormValues, preview?: boolean) => {\n  let paramText = \"?channelId=\" + values.channelId\n  if (values.chatInUserName) paramText += \"&chatInUserName=\" + values.chatInUserName\n  if (values.chatColorMode) paramText += \"&chatColorMode=\" + values.chatColorMode\n  if (values.chatSize) paramText += \"&chatSize=\" + values.chatSize\n  if (values.stampSize) paramText += \"&stampSize=\" + values.stampSize\n  if (values.chatSpeed) paramText += \"&chatSpeed=\" + values.chatSpeed\n  if (values.chatLengthMax) paramText += \"&chatLengthMax=\" + values.chatLengthMax\n  if (values.giftNoticeMode) paramText += \"&giftNoticeMode=\" + values.giftNoticeMode\n  if (values.giftNoticeFeederMode) paramText += \"&giftNoticeFeederMode=\" + values.giftNoticeFeederMode\n  if (values.giftSpeed) paramText += \"&giftSpeed=\" + values.giftSpeed\n  if (values.giftNoticeSound) paramText += \"&giftNoticeSound=\" + values.giftNoticeSound\n  const d = new Date()\n  const t = Math.floor(d.getTime() / 1000)\n  paramText += \"&t=\" + t\n  paramText += \"&v=\" + currentVer.replace(/[^0-9]/g, \"\")\n\n  if (preview) {\n    return baseUrl + paramText + \"&demoMode=true&rnd=\" + Math.random()\n  }\n\n  if (values.demoMode) paramText += \"&demoMode=\" + values.demoMode\n  return baseUrl + paramText\n}\n\ntype MainProps = Props<{}>\n\nconst Component: FC<MainProps> = () => {\n  const [formValues, setFormValues] = useState<FormValues>(defaultFormValues)\n  const [outputUrl, setOutputUrl] = useState(\"\")\n  const [previewUrl, setPreviewUrl] = useState(\"\")\n  const [isCopied, setIsCopied] = useState(false)\n\n  useEffect(() => {\n    if (formValues.channelId === \"\") {\n      setOutputUrl(\"チャンネルIDを入力するとURLが発行されます\")\n    } else {\n      const newOutputUrl = generateOutputUrl(formValues)\n      setOutputUrl(newOutputUrl)\n      const newPreviewUrl = generateOutputUrl(formValues, true)\n      setPreviewUrl(newPreviewUrl)\n    }\n  }, [formValues])\n\n  useEffect(() => {\n    if (isCopied) {\n      setTimeout(() => {\n        setIsCopied(false)\n      }, 3000)\n    }\n  }, [isCopied])\n\n  const handleChange = (e: any) => {\n    e.persist()\n\n    const id = String(e.target.id).replace(\"inp-\", \"\")\n\n    setFormValues((state) => {\n      return {\n        ...state,\n        [id]: e.target.value,\n      }\n    })\n  }\n\n  const handleChangeCheckBox = (e: any) => {\n    e.persist()\n    console.log(e.target.value)\n    console.log(e.target.id)\n\n    const id = String(e.target.id).replace(\"chk-\", \"\")\n\n    setFormValues((state) => {\n      return {\n        ...state,\n        [id]: !state[id],\n      }\n    })\n  }\n\n  const copyText = (e: any) => {\n    if (!formValues.channelId) return\n\n    e.target.select()\n    document.execCommand(\"Copy\")\n    setIsCopied(true)\n  }\n\n  return (\n    <div className=\"root\">\n      <div id=\"title-area\">\n        <h1>OPENREC Chat Client - URL Generator</h1>\n        <span>{currentVer}</span>\n      </div>\n\n      <div id=\"commentary-area\">\n        <h3>これは何か</h3>\n        <p style={{ whiteSpace: \"break-spaces\" }}>\n          {`\n          OPENRECの放送画面に、コメントやエールの画面を流すことができるツールです。\n          このツールは個人で開発しているものなので、ある日突然使えなくなる可能性があります。 詳しい使い方については\n          `}\n          <a href=\"https://tokaisodachi.com/archives/2295\">こちらのページ</a>\n          {`をご覧ください。\n          「こういう機能を付けてほしい」という方は気軽に相談して下さい。\n          `}\n        </p>\n        <h3>株式会社ドワンゴの特許について</h3>\n        <p style={{ whiteSpace: \"break-spaces\" }}>\n          {`\n          株式会社ドワンゴの特許（特許第4695583、特許第4734471）は、\n          「コメントを、コメント付与時間と動画再生時間を用いてシンクロさせ、動画上に表示させる」装置の特許です。\n          一方で、このツールは「生配信のコメントをリアルタイムに表示する」だけのツールです。\n          コメント付与時間も動画再生時間もプログラム上で利用していません。\n          株式会社ドワンゴの特許侵害にはなっていませんので、ご安心してご利用ください。\n          `}\n        </p>\n      </div>\n\n      <div id=\"param-area\">\n        <p id=\"option-text\">設定</p>\n        <p className=\"param-text2\">\n          チャンネルID:{\" \"}\n          <input\n            type=\"text\"\n            placeholder=\"必須\"\n            value={formValues.channelId}\n            className=\"inputBox\"\n            id=\"inp-channelId\"\n            onChange={handleChange}\n          />\n          ※https://www.openrec.tv/user/***** ←ここの部分\n        </p>\n        <label>\n          <input\n            id=\"chk-chatInUserName\"\n            className=\"chkbx\"\n            type=\"checkbox\"\n            checked={formValues.chatInUserName}\n            onChange={handleChangeCheckBox}\n          />\n          <p className=\"chkbx-parts\">流れるコメントに@名前を含める</p>\n        </label>\n        <label>\n          <input\n            id=\"chk-chatColorMode\"\n            className=\"chkbx\"\n            type=\"checkbox\"\n            checked={formValues.chatColorMode}\n            onChange={handleChangeCheckBox}\n          />\n          <p className=\"chkbx-parts\">流れるコメントの色をユーザが設定した色にする</p>\n        </label>\n        <p className=\"param-text2\">\n          流れるコメントの大きさ:{\" \"}\n          <input\n            type=\"text\"\n            placeholder=\"\"\n            className=\"inputBox\"\n            id=\"inp-chatSize\"\n            value={formValues.chatSize}\n            onChange={handleChange}\n          />\n          px\n        </p>\n        <p className=\"param-text2\">\n          流れるスタンプの大きさ:{\" \"}\n          <input\n            type=\"text\"\n            placeholder=\"\"\n            className=\"inputBox\"\n            id=\"inp-stampSize\"\n            value={formValues.stampSize}\n            onChange={handleChange}\n          />\n          px\n        </p>\n        <p className=\"param-text2\">\n          コメントが流れる速度:{\" \"}\n          <input\n            type=\"text\"\n            placeholder=\"\"\n            className=\"inputBox\"\n            id=\"inp-chatSpeed\"\n            value={formValues.chatSpeed}\n            onChange={handleChange}\n          />\n          ※少ないほど早い\n        </p>\n        <p className=\"param-text2\">\n          コメントの最大表示文字数:{\" \"}\n          <input\n            type=\"text\"\n            placeholder=\"\"\n            className=\"inputBox\"\n            id=\"inp-chatLengthMax\"\n            value={formValues.chatLengthMax}\n            onChange={handleChange}\n          />\n          ※超えた分は省略して表示\n        </p>\n        <label>\n          <input\n            id=\"chk-giftNoticeMode\"\n            className=\"chkbx\"\n            type=\"checkbox\"\n            checked={formValues.giftNoticeMode}\n            onChange={handleChangeCheckBox}\n          />\n          <p className=\"chkbx-parts\">エールがきたら画面上から降ってくる</p>\n        </label>\n        <label>\n          <input\n            id=\"chk-giftNoticeFeederMode\"\n            className=\"chkbx\"\n            type=\"checkbox\"\n            checked={formValues.giftNoticeFeederMode}\n            onChange={handleChangeCheckBox}\n          />\n          <p className=\"chkbx-parts\">エールがきたら画面下に詳細が流れる</p>\n        </label>\n        <p className=\"param-text2\">\n          エールが落ちる速度:{\" \"}\n          <input\n            type=\"text\"\n            placeholder=\"\"\n            className=\"inputBox\"\n            id=\"inp-giftSpeed\"\n            value={formValues.giftSpeed}\n            onChange={handleChange}\n          />\n          ※少ないほど早い\n        </p>\n        <label>\n          <input\n            id=\"chk-giftNoticeSound\"\n            className=\"chkbx\"\n            type=\"checkbox\"\n            checked={formValues.giftNoticeSound}\n            onChange={handleChangeCheckBox}\n          />\n          <p className=\"chkbx-parts\">エールが来た時に音を鳴らす</p>\n        </label>\n        ※PREVIEWだとならないかも\n        <label>\n          <input\n            id=\"chk-demoMode\"\n            className=\"chkbx\"\n            type=\"checkbox\"\n            checked={formValues.demoMode}\n            onChange={handleChangeCheckBox}\n          />\n          <p className=\"chkbx-parts\">デモモード</p>\n        </label>\n      </div>\n\n      <span className=\"output-text\">OUTPUT URL</span>\n      <div id=\"output-area\">\n        <input\n          type=\"text\"\n          placeholder=\"\"\n          value={outputUrl}\n          className=\"outputBox\"\n          id=\"outputUrl\"\n          onFocus={copyText}\n          readOnly\n        />\n      </div>\n      <div id=\"copied-text\" style={{ transition: \"1s\", opacity: isCopied ? 1 : 0 }}>\n        コピーしました\n      </div>\n\n      <span className=\"preview-text\">PREVIEW</span>\n      <div id=\"iframe-area\">\n        <iframe\n          title=\"preview\"\n          // src=\"./generator.html?channelId=a&chatSpeed=7000&chatLengthMax=30&giftNoticeMode=true&giftNoticeFeederMode=true&giftSpeed=5000&demoMode=true\"\n          src={previewUrl}\n          frameBorder=\"1\"\n          width=\"1920\"\n          height=\"1080\"\n          id=\"previewFrame\"\n        ></iframe>\n      </div>\n    </div>\n  )\n}\n\nexport default Component\n","import { OpenrecCommentResponse, OpenrecCaptureResponse } from \"./openrec\"\n\nexport class WebSocketManager {\n  private readonly id: string\n  private readonly uri: string\n  private instance: WebSocket\n  private handshakeLoop?: NodeJS.Timeout\n  private commentObserverRef: CommentObserver\n\n  constructor(id: string, commentObserverRef: CommentObserver) {\n    this.id = id\n    this.uri = \"wss://chat.openrec.tv/socket.io/?movieId=\" + this.id + \"&EIO=3&transport=websocket\"\n    this.instance = new WebSocket(this.uri)\n    this.commentObserverRef = commentObserverRef\n  }\n\n  connect() {\n    this.instance.onopen = (e) => {\n      this.onOpen(e)\n    }\n    this.instance.onclose = (e) => {\n      this.onClose(e)\n    }\n    this.instance.onmessage = (e) => {\n      this.onMessage(e)\n    }\n    this.instance.onerror = (e) => {\n      this.onError(e)\n    }\n  }\n\n  disconnect() {\n    try {\n      this.instance.close()\n    } catch (e) {\n      console.error(e)\n      throw new Error(\"Failed disconnect websocket.\")\n    }\n  }\n\n  onOpen(e: Event) {\n    console.log(\"CONNECTED\")\n    this.commentObserverRef.on({\n      message: \"チャットサーバーと接続しました。コメントの取得を開始します。\",\n    })\n    this.handshakeLoop = setInterval(() => {\n      // NOTE: 関数直入れはthis参照がおかしくなるので、関数内関数として定義する\n      this.handshake()\n    }, 25000)\n  }\n\n  onClose(e: CloseEvent) {\n    console.log(\"DISCONNECTED\")\n    if (this.handshakeLoop) clearInterval(this.handshakeLoop)\n  }\n\n  onMessage(e: MessageEvent) {\n    let rawText, json, unescapeed\n\n    try {\n      if (e.data == \"3\") {\n        // handshakeを送った時の反応\n      } else if (e.data == \"40\") {\n        // 通信開始時に送られてくる\n      } else if (e.data.slice(0, 1) == \"0\") {\n        // 通信開始時に送られてくるpingやtimeoutの秒数など\n        rawText = e.data.slice(1)\n        json = JSON.parse(rawText)\n        console.log(json)\n      } else {\n        // message\n        rawText = '\"' + e.data.slice(14, -2) + '\"'\n        //unescapeed = rawText.replace(/\\\\\"/g, '\"');\n        json = JSON.parse(rawText)\n        json = JSON.parse(json)\n\n        console.log(json)\n\n        if (json.type == 0) {\n          // コメント\n          const messageJson = new CommentDeliver(json.data, this.commentObserverRef)\n          messageJson.push()\n        } else if (json.type == 1) {\n          // 同時接続数と視聴数\n        } else if (json.type == 3) {\n          // 生放送が終了\n          console.log(\"live end\")\n          this.disconnect()\n        } else if (json.type == 10) {\n          // 放送タイプ(public_type)\n        } else {\n          console.log(json.type, json.data)\n        }\n      }\n    } catch (er) {\n      if (e.data) console.log(e.data)\n      else console.log(e)\n      console.log(er)\n    }\n  }\n\n  onError(e: Event) {\n    console.log(\"ERROR:\" + e)\n    this.instance.close()\n  }\n\n  handshake() {\n    this.instance.send(\"2\")\n    console.log(\"handshake\")\n  }\n}\n\nexport class CommentDeliver {\n  private info: OpenrecCommentResponse\n  private observer: CommentObserver\n\n  constructor(json: OpenrecCommentResponse, observer: CommentObserver) {\n    console.log(\"================= ================================= ==========================\")\n    console.log(json)\n    this.info = json\n    this.observer = observer\n  }\n\n  push() {\n    const svgUrlBase = \"https://dqd0jw5gvbchn.cloudfront.net/tv/v8.11.0/static/svg/commons\"\n    if (this.info.user_type === \"1\") this.info.user_name += '<img src=\"' + svgUrlBase + '/official.svg\" class=\"mark\">'\n    if (this.info.is_premium) this.info.user_name += '<img src=\"' + svgUrlBase + '/premium.svg\" class=\"mark\">'\n    if (this.info.is_moderator) this.info.user_name += '<img src=\"' + svgUrlBase + '/moderator.svg\" class=\"mark\">'\n    if (this.info.is_fresh) this.info.user_name += '<img src=\"' + svgUrlBase + '/begginer.svg\" class=\"mark\">'\n    if (this.info.is_warned) this.info.user_name += '<img src=\"' + svgUrlBase + '/warned.svg\" class=\"mark\">'\n\n    console.log(this.info.message)\n\n    this.observer.on(this.info)\n\n    // if (this.yell) giftDraw(this.yell.yell_id, 1, this.user_name, this.message)\n    // else chatDraw(this.message, this.user_name, this.user_icon, this.user_color, this.stamp)\n\n    return\n  }\n}\n\ntype CommentObserverReader = Partial<OpenrecCaptureResponse>\n\nexport class CommentObserver {\n  private _readers: CommentObserverReader[]\n\n  constructor() {\n    this._readers = []\n  }\n\n  on(reader: CommentObserverReader) {\n    this._readers.push(reader)\n  }\n\n  off(reader: CommentObserverReader) {\n    this._readers.splice(this._readers.indexOf(reader), 1)\n  }\n\n  get readers() {\n    return this._readers\n  }\n}\n\n// チャット描画\n// export const chatDraw = (text: string, name: string, iconUrl?: string, color?: string, stamp?: any) => {\n//   // 一時的\n//   const chatLengthMax = 1000\n//   const chatInUserName = false\n//   const stampSize = 50\n//   const chatSize = 16\n//   const chatSpeed = 1\n\n//   const colorText = color ? \"color: \" + color + \" !important;\" : \"\"\n\n//   let randId = \"chat-\" + uuidv4()\n//   let randHeight = Math.random() * 1000\n\n//   if (stamp) {\n//     text = '<img src=\"' + stamp.image_url + '\" class=\"stamp\" style=\"width: ' + stampSize + 'px;\">'\n//   } else {\n//     if (text.length >= chatLengthMax) text = text.substr(0, chatLengthMax - 2) + \"...\"\n//   }\n\n//   if (chatInUserName) text = text + \"@\" + name\n//   let insertTag =\n//     '<div id=\"' +\n//     randId +\n//     '\" class=\"chat\" style=\"display: none; left: 1920px; top: ' +\n//     randHeight +\n//     \"px; font-size: \" +\n//     chatSize +\n//     \"px;\" +\n//     colorText +\n//     '\">' +\n//     text +\n//     \"</div>\"\n//   $(\".chatArea\").append(insertTag)\n\n//   $(\"#\" + randId).css(\"display\", \"block\")\n//   let tagWidth = parseInt($(\"#\" + randId).css(\"width\"))\n//   let goalTime = chatSpeed / 1.8 // 過去のVerとの互換の調整\n//   $(\"#\" + randId).animate({ left: -tagWidth }, goalTime, \"linear\", function () {\n//     $(\"#\" + randId).remove()\n//   })\n// }\n\n// ギフト描画\n// const giftDraw = (giftId: number, count: number, senderName: string, message: string) => {\n//   let giftName = \"unknown gift name\"\n//   let giftPrice = 0\n//   let giftUrl = \"https://\"\n//   let giftCategory = 1\n//   if (!message) message = \"\"\n//   if (!count) count = 1\n\n//   giftList.forEach((val) => {\n//     if (giftId == val.id) {\n//       giftName = val.name\n//       giftPrice = val.yells\n//       giftUrl = val.image_url\n//       giftPoint = val.points\n//     }\n//   })\n\n//   if (giftNoticeFeederMode)\n//     renderText.unshift({ text: senderName + \": \" + message + \"(\" + giftPrice + \"yell)\", type: \"gift\" })\n//   if (!giftNoticeMode) return\n//   if (giftNoticeSound)\n//     $(\"#soundGift\").get(0).play()\n//     //if(giftCategory == 3) count *= 15;\n//   ;[...Array(count)].map(() => {\n//     // 指定回数繰り返し\n//     let randId = \"gift\" + randText(\"Int\", 8)\n//     let randWidth = Math.random() * 1000 + 0\n//     let randHeight = Math.random() * 500 + 1280\n//     let giftSpeedFix = giftSpeed + Math.random() * 250\n\n//     let insertTag =\n//       '<img src=\"' +\n//       giftUrl +\n//       '\" id=\"' +\n//       randId +\n//       '\" class=\"gift\" style=\"bottom: ' +\n//       randHeight +\n//       \"px; left: \" +\n//       randWidth +\n//       'px;\">'\n//     $(\".giftArea\").append(insertTag)\n\n//     $(\"#\" + randId).css(\"display\", \"block\")\n//     $(\"#\" + randId).animate({ bottom: -20 }, giftSpeedFix, \"swing\", function () {\n//       $(\"#\" + randId).animate({ bottom: -20 }, 4000, \"swing\", function () {\n//         $(\"#\" + randId).fadeOut(500, function () {\n//           $(\"#\" + randId).remove()\n//         })\n//       })\n//     })\n//   })\n// }\n\nexport const removeHtml = (str: string) => {\n  return str.replace(/<(\"[^\"]*\"|'[^']*'|[^'\">])*>/g, \"\")\n}\n\nexport const randText = (type: string, len: number) => {\n  let p = 36\n\n  if (type == \"Int\") p = 10\n  if (!len) len = 10\n\n  return Math.random()\n    .toString(p)\n    .slice(0 - len)\n}\n","export const updateGiftList = async () => {\n  const res = await fetch(\"https://public.openrec.tv/external/api/v5/yell-products\")\n  return res.json()\n}\n\nexport const getMovieId = async (channelId: string) => {\n  const res = await fetch(\"https://public.openrec.tv/external/api/v5/movies?channel_id=\" + channelId)\n  return res.json()\n}\n\n// どんな値が入ってくるのか大体わかりやすくするためのもの\nexport type BooleanNumber = number\nexport type NumberString = string\nexport type FloatNumber = number\nexport type DateString = string\nexport type TimeString = string\nexport type UrlString = string\nexport type UrlAfterDirNameString = string\nexport type ColorCodeString = string\n\nexport type YellType = string | null\nexport type LastUpdatedAt = DateString | null\n\n// 何が入ってくるか分からないもの\n// デフォがnull\nexport type UnknownParam = any\n// 数値が入ってくることは判明しているがboolとして扱ってそうだったり不定そうなもの\nexport type UnknownNumber = number\n// 中身が不明\nexport type ThumbnailUrls = any[]\n\nexport type StampInfo = {\n  stamp_id: number\n  group_id: number\n  image_url: UrlString\n} | null\nexport type YellInfo = {\n  yell_id: number\n  name: string\n  label: string\n  image_url: UrlString\n  image_url_small: UrlString\n  animation_url: UrlString\n  points: number\n  yells: number\n  ticker_seconds: number\n} | null\nexport type ChannelInfo = {\n  id: string\n  openrec_user_id: number\n  recxuser_id: number\n  nickname: string\n  introduction: string\n  icon_image_url: UrlString\n  l_icon_image_url: UrlString\n  cover_image_url: UrlString\n  l_cover_image_url: UrlString\n  follows: number\n  followers: number\n  is_premium: boolean\n  is_official: boolean\n  is_fresh: boolean\n  is_warned: boolean\n  is_team: boolean\n  is_league_yell: boolean\n  is_live: boolean\n  live_views: number\n  last_updated_at: LastUpdatedAt\n  user_status: string\n  is_creator: boolean\n  premium_start_at: UnknownParam\n  premium_charge_type: UnknownParam\n  premium_payment_status: UnknownParam\n  email: UnknownParam\n  twitter_screen_name: UnknownParam\n} | null\nexport type CaptureInfo = {\n  capture: {\n    id: string\n    movie_start_point: TimeString\n    capture_point: TimeString\n    title: string\n    status: string\n    is_public: boolean\n    published_at: DateString\n    is_ban: boolean\n    is_hidden: boolean\n    start_time: FloatNumber\n    end_time: FloatNumber\n    total_views: number\n    created_at: DateString\n    chat_from_at: DateString\n    url: UrlAfterDirNameString\n    thumbnail_url: UrlString\n    thumbnail_urls: ThumbnailUrls\n  }\n  capture_channel: ChannelInfo\n} | null\n// NOTE: これよく分からん\nexport type ItemDataInfo = {} | null\nexport type BadgesInfo = {\n  id: number\n  image_url: UrlString\n  label: string\n  type: string\n  subscription: {\n    months: UnknownNumber\n    tier: UnknownNumber\n  }\n}[]\n\nexport type OpenrecCommentResponse = {\n  movie_id: number\n  live_type: number\n  onair_status: number\n  user_id: number\n  openrec_user_id: number\n  user_name: string\n  user_type: NumberString\n  user_key: string\n  user_identify_id: string\n  user_rank: number\n  chat_id: number\n  item: number\n  golds: number\n  message: string\n  cre_dt: DateString\n  message_dt: DateString\n  is_fresh: BooleanNumber\n  is_warned: BooleanNumber\n  is_moderator: BooleanNumber\n  is_premium: BooleanNumber\n  is_authenticated: BooleanNumber\n  has_banned_word: BooleanNumber\n  stamp: StampInfo\n  quality_type: number\n  user_icon: UrlString\n  supporter_rank: number\n  is_creaters: BooleanNumber\n  is_premium_hidden: BooleanNumber\n  user_color: ColorCodeString\n  yell: YellInfo\n  yell_type: YellType\n  to_user: ChannelInfo\n  capture: CaptureInfo\n  item_data: ItemDataInfo\n  display_dt: string\n  del_flg: BooleanNumber\n  badges: BadgesInfo\n}\n\nexport type OpenrecCaptureResponse = Omit<OpenrecCommentResponse, \"item\" | \"golds\" | \"message_dt\" | \"quality_type\">\n\n// 配信情報サンプル\n// NOTE: 配信リストを取得したときのデータ\nexport const resMovieSample = {\n  id: \"1o8q65kp1rk\",\n  movie_id: 1653756,\n  title: \"アップデートきたああああああああああ\",\n  introduction: \"https://www.youtube.com/channel/UCIcxUw7gEn5CGxARi5zdICQ\",\n  is_live: true,\n  onair_status: 1,\n  movie_type: \"8\",\n  upload_status: \"SK\",\n  monetize_status: 1,\n  thumbnail_url:\n    \"https://hayabusa.io/openrec-image/thumbnails/16538/1653756/origin/10/captured_9472.w350.ttl3600.jpeg?format=jpg&progressive=true\",\n  l_thumbnail_url:\n    \"https://hayabusa.io/openrec-image/thumbnails/16538/1653756/origin/10/captured_9472.w960.ttl3600.jpeg?format=jpg&progressive=true\",\n  s_thumbnail_url:\n    \"https://hayabusa.io/openrec-image/thumbnails/16538/1653756/origin/10/captured_9472.w350.ttl3600.jpeg?format=jpg&progressive=true\",\n  l_sprite_image_url: \"https://dqd0jw5gvbchn.cloudfront.net/thumbnails/16538/1653756/sprite/10_1_160x90_6x1.jpg\",\n  s_sprite_image_url: \"https://dqd0jw5gvbchn.cloudfront.net/thumbnails/16538/1653756/sprite/10_1_80x45_6x1.jpg\",\n  sprite_intervals: [10],\n  sprite_image: {\n    url: \"https://dqd0jw5gvbchn.cloudfront.net/thumbnails/16538/1653756/sprite/\",\n    interval: 10,\n    width: 160,\n    height: 90,\n    cols: 6,\n    rows: 15,\n    start_page: 1,\n    ext: \"jpg\",\n  },\n  cover_image_url: null,\n  is_cover_image_icon: false,\n  live_views: 573,\n  total_views: 2840,\n  total_yells: 320,\n  is_mobile: false,\n  is_low_latency: true,\n  is_dvr: true,\n  is_capture: true,\n  is_fixed_phrase: true,\n  enabled_ad: true,\n  enabled_yell: true,\n  enabled_owner_yell: true,\n  enabled_cast_yell: false,\n  ad: null,\n  created_at: \"2020-04-14T16:15:26+09:00\",\n  published_at: \"2020-04-16T03:27:01+09:00\",\n  started_at: \"2020-04-16T03:27:01+09:00\",\n  ended_at: \"2020-04-15T16:15:26+09:00\",\n  will_start_at: null,\n  will_end_at: null,\n  start_time: 0,\n  play_time: 0,\n  is_banned: false,\n  ban_type: 0,\n  orientation: 0,\n  device_type: 0,\n  broadcast_type: \"normal\",\n  width: null,\n  height: null,\n  connect_count: 0,\n  play_list_id: 0,\n  league_id: null,\n  tags: [],\n  media: {\n    url: \"https://station316.openrec.tv/live1/ngrp:9e89d2a38ec1df78b226249d20047e19e14d631230_all/playlist.m3u8\",\n    url_source: null,\n    url_public:\n      \"https://station316.openrec.tv/live1/ngrp:9e89d2a38ec1df78b226249d20047e19e14d631230_public/playlist.m3u8\",\n    url_trailer: null,\n    url_dvr: \"https://d3cfw2mckicdfw.cloudfront.net/9e89d2a38ec1df78b226249d20047e19e14d631230/playlist.m3u8\",\n    url_dvr_audio: \"https://d3cfw2mckicdfw.cloudfront.net/9e89d2a38ec1df78b226249d20047e19e14d631230/aac.m3u8\",\n    url_audio:\n      \"https://station316.openrec.tv/live1/ngrp:9e89d2a38ec1df78b226249d20047e19e14d631230_audio/playlist.m3u8\",\n    url_low_latency:\n      \"https://station-proxy.openrec.tv/a/1/live1/9e89d2a38ec1df78b226249d20047e19e14d631230/playlist.m3u8\",\n    url_ull: \"https://d3cfw2mckicdfw.cloudfront.net/9e89d2a38ec1df78b226249d20047e19e14d631230/playlist-ull.m3u8\",\n  },\n  subs_trial_media: {\n    url: null,\n    url_low_latency: null,\n    url_ull: null,\n    url_dvr: null,\n    url_audio: null,\n    url_dvr_audio: null,\n  },\n  channel: {\n    id: \"oekaki\",\n    recxuser_id: 24500354,\n    openrec_user_id: 188312,\n    name: \"おおえのたかゆき\",\n    nickname: \"おおえのたかゆき\",\n    introduction: \"youtube↵https://www.youtube.com/channel/UCIcxUw7gEn5CGxARi5zdICQ\",\n    icon_image_url: \"https://hayabusa.io/openrec-image/user/245004/24500354.w90.ttl3600.v1566882412.png?format=png\",\n    l_icon_image_url: \"https://hayabusa.io/openrec-image/user/245004/24500354.w320.ttl3600.v1566882412.png?format=png\",\n    cover_image_url:\n      \"https://hayabusa.io/openrec-image/user_background/245004/24500354.w210.ttl3600.v1494213775.png?format=png\",\n    l_cover_image_url:\n      \"https://hayabusa.io/openrec-image/user_background/245004/24500354.ttl3600.v1494213775.png?format=png\",\n    movies: 1325,\n    views: 14917340,\n    follows: 0,\n    followers: 20027,\n    is_premium: true,\n    is_official: true,\n    is_fresh: false,\n    is_warned: false,\n    is_league_yell: false,\n    is_team: false,\n    is_live: false,\n    live_views: 0,\n    user_status: null,\n    is_creator: false,\n    chat_rule: \"\",\n    last_updated_at: \"2020-04-16T03:27:01+09:00\",\n    twitter_screen_name: null,\n    ga_tracking_id: null,\n    blacklist: [],\n    games: null,\n    onair_broadcast_movies: null,\n  },\n  subs_channel: null,\n  chat_setting: {\n    name_color: \"#f4a341\",\n    is_premium_hidden: true,\n    limited_continuous_chat: false,\n    continuous_chat_threshold: 0,\n    limited_unfollower_chat: false,\n    unfollower_chat_threshold: 0,\n    limited_fresh_user_chat: false,\n    fresh_user_chat_threshold: 0,\n    limited_temporary_blacklist: false,\n    temporary_blacklist_threshold: 0,\n    limited_warned_user_chat: false,\n    chat_rule: \"\",\n  },\n  game: {\n    id: \"splatoon2\",\n    game_id: 1424,\n    title: \"Splatoon2（スプラトゥーン2）\",\n    introduction:\n      \"2017年夏発売。↵↵4対4のナワバリバトルの基本はそのままに、バトルの舞台は変化し、ファッションやブキも進化。スペシャルウェポンも一新。↵↵今作でも発売後のアップデートやゲーム内イベントの開催を予定。↵↵インターネットでフレンドや見知らぬ人と対戦できることはもちろん、本体を持ち寄って仲間と顔を合わせての対戦も可能。↵↵https://www.nintendo.co.jp/software/switch/splatoon2/↵↵(C)2017 Nintendo\",\n    title_image_url:\n      \"https://hayabusa.io/openrec-image/game_title/15/1424.w150.ttl3600.jpg?format=jpg&progressive=true\",\n    cover_image_url:\n      \"https://hayabusa.io/openrec-image/game_cover/15/1424.w845.ttl3600.jpg?format=jpg&progressive=true\",\n    app_store_url: \"\",\n    play_store_url: \"\",\n    schema_url: \"\",\n    package_name: \"\",\n    license_status: 0,\n    notice_message: \"\",\n    monetize_status: 1,\n    cero_rating: 0,\n    is_portrait: false,\n    released_at: null,\n    maker: null,\n    platform_mobile: \"\",\n    platform_pc: \"\",\n    platform_console: \"Switch\",\n    platform_arcade: \"\",\n    is_platform_mobile: false,\n    is_platform_pc: false,\n    is_platform_console: true,\n    is_platform_arcade: false,\n    stats: {\n      live_views: null,\n      movie_count: null,\n      total_views: null,\n      creator_count: null,\n      last_update_at: null,\n    },\n  },\n  next: null,\n  casts: [],\n  popularity: 573,\n  is_live_viewers: true,\n  public_type: \"all\",\n  chat_public_type: \"all\",\n  archive_public_type: \"all\",\n  poll: null,\n  poll_use_target: null,\n  view_history: {\n    views_at: null,\n    play_position: 0,\n  },\n}\n\n// コメントサンプル\n// NOTE: badgeは特殊なものがある場合のみ追加される（サブスクマークなど）\nexport const resNormalCommentSample: OpenrecCommentResponse = {\n  movie_id: 1655382,\n  live_type: 1,\n  onair_status: 1,\n  user_id: 5049010,\n  openrec_user_id: 50990,\n  user_name: \"カオスソルジャッ\",\n  user_type: \"2\",\n  user_key: \"hannma\",\n  user_identify_id: \"R_v9xetQpSgNS\",\n  user_rank: 0,\n  chat_id: 341360867,\n  item: 0,\n  golds: 0,\n  message: \"画質よき\",\n  cre_dt: \"2020-04-15 19:18:42\",\n  message_dt: \"2020-04-15 19:18:42\",\n  is_fresh: 0,\n  is_warned: 0,\n  is_moderator: 0,\n  is_premium: 1,\n  is_authenticated: 1,\n  has_banned_word: 0,\n  stamp: null,\n  quality_type: 2,\n  user_icon: \"https://www.openrec.tv/images/v4/default/profile.png\",\n  supporter_rank: 0,\n  is_creaters: 0,\n  is_premium_hidden: 0,\n  user_color: \"#e200ff\",\n  yell: null,\n  yell_type: null,\n  to_user: null,\n  capture: null,\n  item_data: null,\n  display_dt: \"0秒前\",\n  del_flg: 0,\n  badges: [],\n}\n\nexport const resStampSample: OpenrecCommentResponse = {\n  movie_id: 1655382,\n  live_type: 1,\n  onair_status: 1,\n  user_id: 132399086,\n  openrec_user_id: 1026680,\n  user_name: \"ゆめかわ\",\n  user_type: \"2\",\n  user_key: \"momijiiii\",\n  user_identify_id: \"o4Il6AvpofE8v\",\n  user_rank: 0,\n  chat_id: 341361476,\n  item: 0,\n  golds: 0,\n  message: \"\",\n  cre_dt: \"2020-04-15 19:22:52\",\n  message_dt: \"2020-04-15 19:22:52\",\n  is_fresh: 0,\n  is_warned: 0,\n  is_moderator: 0,\n  is_premium: 1,\n  is_authenticated: 1,\n  has_banned_word: 0,\n  stamp: {\n    stamp_id: 380,\n    group_id: 15,\n    image_url: \"https://dqd0jw5gvbchn.cloudfront.net/stamp/15/128/4532998fa45a5b73e8928cb6ac82f651a9b951ff.png\",\n  },\n  quality_type: 2,\n  user_icon: \"https://openrec-appdata.s3.amazonaws.com/user/1323991/132399086.png?1577618658\",\n  supporter_rank: 0,\n  is_creaters: 0,\n  is_premium_hidden: 0,\n  user_color: \"#eaff00\",\n  yell: null,\n  yell_type: null,\n  to_user: null,\n  capture: null,\n  item_data: null,\n  display_dt: \"0秒前\",\n  del_flg: 0,\n  badges: [],\n}\n\nexport const resCaptureSample: OpenrecCaptureResponse = {\n  movie_id: 1655382,\n  live_type: 1,\n  onair_status: 1,\n  user_id: 22399237,\n  openrec_user_id: 163096,\n  user_name: \"ソて〜\",\n  user_type: \"2\",\n  user_key: \"sophia_N\",\n  user_identify_id: \"Ys_3rqAdzf3JM\",\n  user_rank: 0,\n  chat_id: 341361614,\n  message: \"キャプチャを公開しました。\",\n  cre_dt: \"2020-04-15 19:23:43\",\n  is_fresh: 0,\n  is_warned: 0,\n  is_moderator: 0,\n  is_premium: 0,\n  is_authenticated: 1,\n  has_banned_word: 0,\n  stamp: null,\n  user_icon: \"https://openrec-appdata.s3.amazonaws.com/user/223993/22399237.png?1472296057\",\n  supporter_rank: 0,\n  is_creaters: 0,\n  is_premium_hidden: 0,\n  user_color: \"#B6FF59\",\n  yell: null,\n  yell_type: null,\n  to_user: null,\n  capture: {\n    capture: {\n      id: \"kvn4kp83qe6\",\n      movie_start_point: \"01:56:39\",\n      capture_point: \"01:57:24\",\n      title: \"※ボトルから持ち換えて１試合目です\",\n      status: \"finish\",\n      is_public: true,\n      published_at: \"2020-04-15T19:23:43+09:00\",\n      is_ban: false,\n      is_hidden: false,\n      start_time: 48.58306270627064,\n      end_time: 121.483,\n      total_views: 0,\n      created_at: \"2020-04-15T19:22:48+09:00\",\n      chat_from_at: \"2020-04-15T19:20:48+09:00\",\n      url: \"/external/api/v5/captures/kvn4kp83qe6/playlist.m3u8\",\n      thumbnail_url:\n        \"https://hayabusa.io/openrec-image/thumbnails/capture/1655382-015724/capture_2.w350.ttl3600.jpg?format=jpg&progressive=true\",\n      thumbnail_urls: [],\n    },\n    capture_channel: {\n      id: \"sophia_N\",\n      openrec_user_id: 163096,\n      recxuser_id: 22399237,\n      nickname: \"ソて〜\",\n      introduction: \"\",\n      icon_image_url: \"https://hayabusa.io/openrec-image/user/223993/22399237.w90.ttl3600.v1472296057.png?format=png\",\n      l_icon_image_url:\n        \"https://hayabusa.io/openrec-image/user/223993/22399237.w320.ttl3600.v1472296057.png?format=png\",\n      cover_image_url: \"\",\n      l_cover_image_url: \"\",\n      follows: 50,\n      followers: 12,\n      is_premium: false,\n      is_official: false,\n      is_fresh: false,\n      is_warned: false,\n      is_team: false,\n      is_league_yell: false,\n      is_live: false,\n      live_views: 0,\n      last_updated_at: null,\n      user_status: \"bang\",\n      is_creator: false,\n      premium_start_at: null,\n      premium_charge_type: null,\n      premium_payment_status: null,\n      email: null,\n      twitter_screen_name: null,\n    },\n  },\n  item_data: null,\n  display_dt: \"0秒前\",\n  del_flg: 0,\n  badges: [],\n}\n\nexport const resAuthorCommentSample: OpenrecCommentResponse = {\n  movie_id: 1655382,\n  live_type: 1,\n  onair_status: 1,\n  user_id: 420271639,\n  openrec_user_id: 1931071,\n  user_name: \"ちょこぺろ\",\n  user_type: \"1\",\n  user_key: \"rrchoco\",\n  user_identify_id: \"oBVDx625kAp\",\n  user_rank: 0,\n  chat_id: 341361970,\n  item: 0,\n  golds: 0,\n  message: \"どうやって勝つの！\",\n  cre_dt: \"2020-04-15 19:26:01\",\n  message_dt: \"2020-04-15 19:26:01\",\n  is_fresh: 0,\n  is_warned: 0,\n  is_moderator: 0,\n  is_premium: 1,\n  is_authenticated: 1,\n  has_banned_word: 0,\n  stamp: null,\n  quality_type: 2,\n  user_icon: \"https://openrec-appdata.s3.amazonaws.com/user/4202717/420271639.png?1586744809\",\n  supporter_rank: 0,\n  is_creaters: 1,\n  is_premium_hidden: 0,\n  user_color: \"#2468DF\",\n  yell: null,\n  yell_type: null,\n  to_user: null,\n  capture: null,\n  item_data: null,\n  display_dt: \"0秒前\",\n  del_flg: 0,\n  badges: [],\n}\n\nexport const resYellSample: OpenrecCommentResponse = {\n  movie_id: 1655697,\n  live_type: 1,\n  onair_status: 1,\n  user_id: 413052603,\n  openrec_user_id: 1910999,\n  user_name: \"ごっしぃ\",\n  user_type: \"2\",\n  user_key: \"Goshi1015\",\n  user_identify_id: \"7BbnzP96gBW\",\n  user_rank: 0,\n  chat_id: 341378135,\n  item: 0,\n  golds: 0,\n  message: \"緑のうさぎ風いいんすか!?が聞きたくて笑\",\n  cre_dt: \"2020-04-15 20:35:58\",\n  message_dt: \"2020-04-15 20:35:41\",\n  is_fresh: 0,\n  is_warned: 0,\n  is_moderator: 0,\n  is_premium: 0,\n  is_authenticated: 1,\n  has_banned_word: 0,\n  stamp: null,\n  quality_type: 1,\n  user_icon: \"https://openrec-appdata.s3.amazonaws.com/user/4130527/413052603.png?1581725208\",\n  supporter_rank: 0,\n  is_creaters: 0,\n  is_premium_hidden: 0,\n  user_color: \"#94FF0D\",\n  yell: {\n    yell_id: 171,\n    name: \"01_winterfood\",\n    label: \"[公開]_02_winterfood\",\n    image_url: \"https://dqd0jw5gvbchn.cloudfront.net/yell/171/eb06122f3a2e297895078dd1639e09c59ed8797b.gif\",\n    image_url_small: \"\",\n    animation_url: \"\",\n    points: 200,\n    yells: 160,\n    ticker_seconds: 10,\n  },\n  yell_type: \"channel\",\n  to_user: {\n    id: \"tototArisakaaa\",\n    openrec_user_id: 9150,\n    recxuser_id: 375495,\n    nickname: \"ありさか\",\n    introduction:\n      \"YoutubeとOPENRECで時間不定期で配信してます↵ ↵【所属チーム】↵Crazy Raccoon↵↵お仕事依頼はこちらにご連絡ください↵crazyraccoon1205@gmail.com↵↵twitter↵https://twitter.com/ArisakaaaT↵amazon欲しいもの↵http://amzn.asia/fHD8uqD ↵youtube↵https://www.youtube.com/channel/UCLLuaTElO1eRGOo2qc_Rdsw?view_as=subscriber↵\",\n    icon_image_url: \"https://hayabusa.io/openrec-image/user/3755/375495.w90.ttl3600.v1518946365.png?format=png\",\n    l_icon_image_url: \"https://hayabusa.io/openrec-image/user/3755/375495.w320.ttl3600.v1518946365.png?format=png\",\n    cover_image_url:\n      \"https://hayabusa.io/openrec-image/user_background/3755/375495_cover.w210.ttl3600.v1586456686.png?format=png\",\n    l_cover_image_url:\n      \"https://hayabusa.io/openrec-image/user_background/3755/375495_cover.ttl3600.v1586456686.png?format=png\",\n    follows: 23,\n    followers: 25955,\n    is_premium: true,\n    is_official: true,\n    is_fresh: false,\n    is_warned: false,\n    is_team: false,\n    is_league_yell: false,\n    is_live: false,\n    live_views: 0,\n    last_updated_at: \"2020-04-15T20:21:11+09:00\",\n    user_status: \"publish\",\n    is_creator: true,\n    premium_start_at: null,\n    premium_charge_type: null,\n    premium_payment_status: null,\n    email: null,\n    twitter_screen_name: null,\n  },\n  capture: null,\n  item_data: null,\n  display_dt: \"0秒前\",\n  del_flg: 0,\n  badges: [\n    {\n      id: 82,\n      image_url: \"https://dqd0jw5gvbchn.cloudfront.net/badge/subscription/16/20_1_20200413150408.png\",\n      label: \"ありさかのサブスク\",\n      type: \"subscription\",\n      subscription: {\n        months: 1,\n        tier: 0,\n      },\n    },\n  ],\n}\n","import React, { FC, Props, useState, useEffect, useRef } from \"react\"\nimport { RouteComponentProps } from \"react-router\"\n\nimport \"./index.css\"\n\nimport { WebSocketManager, CommentObserver } from \"../../../../lib/utils\"\nimport {\n  getMovieId,\n  OpenrecCommentResponse,\n  resNormalCommentSample,\n  resStampSample,\n  resYellSample,\n  resCaptureSample,\n} from \"../../../../lib/utils/openrec\"\n\n// 配信者がオフラインだった場合に配信されているか再確認する間隔\nconst RETRY_CHECK_ONAIR_MILLISEC = 10000\n// 自動スクロール判定の高さ。自動スクロール中に指定数値ピクセル分過去にスクロールすると自動スクロールが無効化されます。（表現難しい。。。）\n// スクロール判定間隔が短いと無効化が難しくなります。テキストやスタンプサイズにも影響されます。\nconst DEFAULT_AUTO_SCROLL_START_MARGIN = 1000\n// スクロール判定間隔。少ないほど頻繁にスクロール実行確認および実行を行います。間隔を短くするほどパフォーマンスに影響します。\nconst DEFAULT_AUTO_SCROLL_INTERVAL = 500\nconst DEFAULT_TEXT_SIZE = 14\nconst DEFAULT_STAMP_SIZE = 100\nconst DEFAULT_YELL_SIZE = 100\nconst DEFAULT_CAPTURE_SIZE = 100\n\ntype MainProps = Props<{}> & RouteComponentProps<any>\n\n// コメントによって内容が結構変わったりするので、\ntype ForOnairComment = Partial<OpenrecCommentResponse>\ntype ForOnairComments = Array<ForOnairComment>\n\nconst Component: FC<MainProps> = (props) => {\n  const { location } = props\n\n  /**\n   * クエリパラメータ管理\n   */\n  const queryParams = new URLSearchParams(location.search)\n  const [channelId] = useState(queryParams.get(\"channelId\"))\n  const [demoMode] = useState<boolean>(queryParams.get(\"demoMode\") === \"on\")\n  // 0を許容したいのでやや冗長な書き方に\n  const [autoScrollStartMargin, setAutoScrollStartMargin] = useState<number>(\n    queryParams.get(\"autoScrollStartMargin\") && queryParams.get(\"autoScrollStartMargin\") !== \"\"\n      ? Number(queryParams.get(\"autoScrollStartMargin\"))\n      : DEFAULT_AUTO_SCROLL_START_MARGIN\n  )\n  const [autoScrollInterval] = useState(\n    queryParams.get(\"autoScrollInterval\") ? Number(queryParams.get(\"autoScrollInterval\")) : DEFAULT_AUTO_SCROLL_INTERVAL\n  )\n\n  const [style] = useState<CommentStyle>({\n    textSize: queryParams.get(\"textSize\") ? Number(queryParams.get(\"textSize\")) : DEFAULT_TEXT_SIZE,\n    stampSize: queryParams.get(\"stampSize\") ? Number(queryParams.get(\"stampSize\")) : DEFAULT_STAMP_SIZE,\n    yellSize: queryParams.get(\"yellSize\") ? Number(queryParams.get(\"yellSize\")) : DEFAULT_YELL_SIZE,\n    captureSize: queryParams.get(\"captureSize\") ? Number(queryParams.get(\"captureSize\")) : DEFAULT_CAPTURE_SIZE,\n  })\n\n  const [wsManager, setWsManager] = useState<WebSocketManager | null>(null)\n  const [commentObserver] = useState<CommentObserver>(new CommentObserver())\n  const [onairInfo, setOnairInfo] = useState<{ id: string; title: string; channel: string } | null>(null)\n  const [comments, setComments] = useState<ForOnairComments>([])\n\n  const onairObserverTimerRef = useRef<NodeJS.Timeout>()\n  const commentObserverTimerRef = useRef<NodeJS.Timeout>()\n  const autoScrollTimerRef = useRef<NodeJS.Timeout>()\n  const scrollTargetRef = useRef<HTMLDivElement | null>(null)\n\n  useEffect(() => {\n    // デモ開始\n    if (demoMode) {\n      const comment: ForOnairComment = { message: \"デモ配信スタート\", chat_id: new Date().getTime() }\n      setComments((prevState) => [comment])\n      setInterval(() => {\n        const comment: ForOnairComment = { message: \"tekitou\", chat_id: new Date().getTime() }\n        // setComments((prevState) => [...prevState, comment])\n      }, 1000)\n\n      setInterval(() => {\n        setComments((prevState) => [...prevState, { ...resNormalCommentSample, chat_id: new Date().getTime() }])\n        setComments((prevState) => [...prevState, { ...resStampSample, chat_id: new Date().getTime() }])\n        setComments((prevState) => [...prevState, { ...resYellSample, chat_id: new Date().getTime() }])\n        setComments((prevState) => [...prevState, { ...resCaptureSample, chat_id: new Date().getTime() }])\n      }, 3000)\n    } else {\n      // 本番通信\n      const comment = { message: \"配信開始を待っています...\" }\n      setComments((prevState) => [comment])\n      onairObserver()\n    }\n\n    return () => {\n      wsManager?.disconnect()\n    }\n  }, [])\n\n  /**\n   * 配信状況管理\n   */\n  useEffect(() => {\n    if (onairInfo !== null) {\n      setWsManager(new WebSocketManager(onairInfo.id, commentObserver))\n\n      commentObserverTimerRef.current = setInterval(() => {\n        const comments = commentObserver.readers\n        setComments((prevState) => JSON.parse(JSON.stringify(comments)))\n      }, 500)\n    }\n  }, [onairInfo])\n\n  /**\n   * WebSocket管理\n   */\n  useEffect(() => {\n    if (wsManager) {\n      wsManager.connect()\n    }\n  }, [wsManager])\n\n  /**\n   * スクロール管理\n   */\n  useEffect(() => {\n    autoScrollTimerRef.current = setInterval(() => {\n      const nowBottom = window.innerHeight + window.scrollY\n      const contentBottom = scrollTargetRef.current?.scrollHeight\n\n      if (!contentBottom) return\n\n      if (autoScrollStartMargin === 0 || nowBottom >= contentBottom - autoScrollStartMargin) {\n        scrollTargetRef.current?.scrollIntoView({ behavior: \"smooth\", block: \"end\", inline: \"nearest\" })\n      }\n    }, autoScrollInterval)\n  }, [])\n\n  /**\n   * 配信情報の取得処理\n   */\n  const onairObserver = () => {\n    if (!channelId) return\n\n    getMovieId(channelId)\n      .then((data) => {\n        console.log(data)\n\n        const nowOnair = data.find((val: any) => val.onair_status === 1)\n\n        if (nowOnair) {\n          setOnairInfo({\n            id: nowOnair.movie_id,\n            title: nowOnair.title,\n            channel: nowOnair.channel.name,\n          })\n        } else {\n          console.log(`Not now onair. retry checking after ${RETRY_CHECK_ONAIR_MILLISEC}ms...`)\n          // onairじゃなかったら定期的にオンラインかどうか確認\n          onairObserverTimerRef.current = setTimeout(onairObserver, RETRY_CHECK_ONAIR_MILLISEC)\n        }\n      })\n      .catch((err) => {\n        throw new Error(\"Failed get movie id. Please check if it is a valid user ID.\")\n      })\n  }\n\n  if (!demoMode && !channelId) {\n    return <div>チャンネルIDが指定されていません。</div>\n  }\n\n  return (\n    <>\n      <div className=\"chatArea\" ref={scrollTargetRef}>\n        <Comments comments={comments} style={style} />\n      </div>\n    </>\n  )\n}\n\ntype CommentStyle = {\n  textSize: number\n  stampSize: number\n  yellSize: number\n  captureSize: number\n}\n\nconst Comments: FC<{ comments: ForOnairComments; style: CommentStyle }> = (props) => {\n  const { comments, style } = props\n  return (\n    <>\n      {comments.map((v, i) => (\n        <div key={`comment-${v.chat_id}`} className=\"comment-row\">\n          <div className=\"comment-wrapper\" style={{ fontSize: style.textSize }}>\n            <Comment comment={v} style={style} />\n          </div>\n        </div>\n      ))}\n    </>\n  )\n}\n\nconst Comment: FC<{ comment: ForOnairComment; style: CommentStyle }> = (props) => {\n  const { comment, style } = props\n\n  if (comment.stamp) {\n    return (\n      <div>\n        <img\n          src={comment.stamp.image_url}\n          alt={comment.stamp.image_url}\n          className=\"stamp\"\n          style={{ width: style.stampSize }}\n        />\n      </div>\n    )\n  }\n\n  if (comment.capture) {\n    return (\n      <div>\n        <img\n          src={comment.capture.capture.thumbnail_url}\n          alt={comment.capture.capture.thumbnail_url}\n          className=\"capture\"\n          style={{ width: style.captureSize }}\n        />\n        <span>{comment.message}</span>\n        <span>{comment.capture.capture.title}</span>\n      </div>\n    )\n  }\n\n  if (comment.yell) {\n    return (\n      <div>\n        <div>{comment.message}</div>\n        <img\n          src={comment.yell.image_url}\n          alt={comment.yell.image_url}\n          className=\"yell\"\n          style={{ width: style.yellSize }}\n        />\n        <span>{comment.yell.yells}</span>\n      </div>\n    )\n  }\n\n  return <div>{comment.message}</div>\n}\n\nexport default Component\n","import React from \"react\"\nimport { HashRouter as Router, Redirect, Route, Switch } from \"react-router-dom\"\n\nimport Top from \"../../views/components/environments/Top\"\nimport Generator from \"../../views/components/environments/Generator\"\n\ntype MainProps = React.Props<{}>\n\nconst FComponent: React.FC<MainProps> = () => {\n  return (\n    <Router>\n      <Switch>\n        <Route exact={true} path=\"/\" render={() => <Top />} />\n        <Route exact={true} path=\"/generator\" render={(props) => <Generator {...props} />} />\n\n        <Redirect to=\"/\" />\n      </Switch>\n    </Router>\n  )\n}\n\nexport default FComponent\n","import React from \"react\"\n\nimport Router from \"../routers/Router\"\n\nconst App = () => {\n  return <Router />\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === \"localhost\" ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === \"[::1]\" ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n)\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void\n  onUpdate?: (registration: ServiceWorkerRegistration) => void\n}\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === \"production\" && \"serviceWorker\" in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener(\"load\", () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            \"This web app is being served cache-first by a service \" +\n              \"worker. To learn more, visit https://bit.ly/CRA-PWA\"\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === \"installed\") {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                \"New content is available and will be used when all \" +\n                  \"tabs for this page are closed. See https://bit.ly/CRA-PWA.\"\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log(\"Content is cached for offline use.\")\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error(\"Error during service worker registration:\", error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { \"Service-Worker\": \"script\" },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get(\"content-type\")\n      if (response.status === 404 || (contentType != null && contentType.indexOf(\"javascript\") === -1)) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\"No internet connection found. App is running in offline mode.\")\n    })\n}\n\nexport function unregister() {\n  if (\"serviceWorker\" in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister()\n      })\n      .catch((error) => {\n        console.error(error.message)\n      })\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./views/Component\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}